{"version":3,"file":"gcccomps.js","sourceRoot":"","sources":["../src/export.ts","../src/box2d/tools/Box2DExport.ts","../src/box2d/tools/CCB2CollisionComp.ts","../src/box2d/tools/CCB2SkillComp.ts","../src/box2d/tools/CCNodeUIDTool.ts","../src/ccvercompat/CCCompat.ts","../src/prefab/ChildrenLoader.ts","../src/prefab/RuntimeNewNode.ts","../src/prefab/SimpleNodeLoader.ts","../src/resloader/DynamicLoader.ts","../src/respool/AssetsManager.ts","../src/respool/ResPoolMap.ts","../src/respool/CCNodePoolMap.ts","../src/respool/CCEasyNodePoolMap.ts","../src/respool/CCNodePreloader.ts","../src/respool/MyNodePool.ts","../src/transform/TransformTool.ts","../src/uit/CCGameStick.ts","../src/uit/CCGamepad.ts","../src/uit/CocosTouchPad.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nnamespace gcc.uit {\r\n\twindow['gcc'] = gcc\r\n}\r\n","\r\nnamespace gcc.box2d.tools {\r\n    import b2data = fsync.box2d.b2data\r\n\r\n    function convCCVec2(vec2: cc.Vec2) {\r\n        return fsync.Vector2.fromXYZLike(vec2)\r\n    }\r\n\r\n    function convCCVec3(vec3: cc.Vec3) {\r\n        return fsync.Vector3.fromXYZLike(vec3)\r\n    }\r\n\r\n    function convCCSize2(size2: cc.Size) {\r\n        return fsync.Size2.fromSize2Like(size2)\r\n    }\r\n\r\n    function convCCSize3(size3: cc.Size) {\r\n        return fsync.Size3.fromSize3Like(size3)\r\n    }\r\n\r\n    /**\r\n     * box2d预制体导出工具\r\n     */\r\n    export class Box2DExport {\r\n        static inst: Box2DExport = new Box2DExport()\r\n\r\n        writeFile(fileName: string, ss: string) {\r\n            if (window[\"Editor\"]) {\r\n                // console.log(\"export file:\", fileName)\r\n                const path = window['require']('path');\r\n                Editor.log(\"export file:\", path.normalize(fileName).replace(/\\\\/mg, \"/\"))\r\n                const fs = window['require']('fs');\r\n                fs.writeFileSync(fileName, ss)\r\n            }\r\n        }\r\n\r\n        /**\r\n         * \r\n         * @param dir \r\n         * @param outDir \r\n         * @param call \r\n         * @param throwAnyError 抛出任何异常,并打断当前导出流程\r\n         */\r\n        exportPrefabs(dir: string, outDir: string, call?: (err) => void, throwAnyError: boolean = true) {\r\n            Editor.warn(\"export file:\", `导出目录 ${dir} 开始。`)\r\n            cc.loader.loadResDir(dir, cc.Prefab, (err, reses: cc.Prefab[]) => {\r\n                if (!err) {\r\n                    for (let res of reses) {\r\n                        this.tryRun(`导出预制体失败: ${res.name}`, () => {\r\n                            this.handleBox2dPrefab(res, outDir)\r\n                        }, throwAnyError)\r\n                    }\r\n                    if (window[\"Editor\"]) {\r\n                        Editor.warn(\"export file:\", `导出目录 ${dir} 结束。`)\r\n                    }\r\n                }\r\n                call && call(err)\r\n            })\r\n        }\r\n\r\n        /**\r\n         * 转换预制体\r\n         * @param prefab \r\n         * @param outDir \r\n         */\r\n        handleBox2dPrefab(prefab: cc.Prefab, outDir: string) {\r\n            nodeUIDTool.reset()\r\n            let b2Node = this.convBox2dPrefab(prefab)\r\n\r\n            let sentences = b2data.exportB2NodeToTypescript(b2Node)\r\n            let ss = sentences.join(\"\\n\")\r\n            this.writeFile(`${outDir}/${prefab.name}.ts`, ss)\r\n\r\n            this.writeFile(`${outDir}/${prefab.name}.json`, JSON.stringify(b2Node))\r\n        }\r\n\r\n        tryRun(tip: string, call: Function, reThrow: boolean = true) {\r\n            try {\r\n                return call && call()\r\n            } catch (e) {\r\n                if (window[\"Editor\"]) {\r\n                    Editor.error(tip)\r\n                } else {\r\n                    console.error(tip)\r\n                }\r\n                if (reThrow) {\r\n                    throw e\r\n                }\r\n            }\r\n        }\r\n\r\n        convBox2dPrefab(prefab: cc.Prefab): b2data.Box2DNode {\r\n            // let node = cc.instantiate(prefab)\r\n            let node = prefab.data as cc.Node\r\n            // this.detectDuplicatedChildName(node)\r\n            let model = this.convBox2dNode(prefab.name, node)\r\n            return model\r\n        }\r\n\r\n        /**\r\n         * 检测重名子节点，保证简化版uid一致\r\n         */\r\n        detectDuplicatedChildName(node: cc.Node) {\r\n            let map: { [key: string]: boolean } = {}\r\n            node.children.forEach(child => {\r\n                if (!map[child.name]) {\r\n                    map[child.name] = true\r\n                } else {\r\n                    let tip = `detectDuplicatedChildName: ${child.parent.name}/${child.name}`\r\n                    if (window[\"Editor\"]) {\r\n                        Editor.error(tip)\r\n                    } else {\r\n                        throw new Error(tip)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n\r\n        /**\r\n         * 转换节点\r\n         * @param name \r\n         * @param node \r\n         */\r\n        convBox2dNode(name: string, node: cc.Node): b2data.Box2DNode {\r\n            let b2Node = new b2data.Box2DNode()\r\n            b2Node.oid = this.getNodeUID(node)\r\n            b2Node.name = name\r\n            for (let child of node.children) {\r\n                if (!!child.getComponent(cc.RigidBody)) {\r\n                    let b2Body = this.handleBox2dBody(child)\r\n                    b2Node.children.push(b2Body)\r\n                }\r\n            }\r\n\r\n            for (let comp of node.getComponentsInChildren(CCB2SkillComp)) {\r\n                let b2Comp = this.handleSkillComp(comp)\r\n                b2Node.skillExtras.push(b2Comp)\r\n            }\r\n\r\n            {\r\n                let transform = new b2data.Transform()\r\n                transform.oid = \"transform_\" + this.getNodeUID(node)\r\n                transform.position = convCCVec3(node.position)\r\n                transform.rotation = -node.angle\r\n                transform.ctype = \"transform\"\r\n\r\n                b2Node.transform = transform\r\n            }\r\n\r\n            return b2Node\r\n        }\r\n\r\n        getBodyNodeUID(node: cc.Node) {\r\n            return nodeUIDTool.getBodyNodeUID(node)\r\n            // return `uid^${node.parent.name}^${node.name}`\r\n            // return node.uuid\r\n        }\r\n\r\n        getCompUID(comp: cc.Component) {\r\n            return nodeUIDTool.getCompUID(comp)\r\n            // return `uid^${comp.node.parent.name}^${comp.node.name}^${comp.name}`\r\n            // return comp.uuid\r\n        }\r\n\r\n        getNodeUID(node: cc.Node) {\r\n            return nodeUIDTool.getNodeUID(node)\r\n            // return `uid^${node.name}`\r\n            // return node.uuid\r\n        }\r\n\r\n        /**\r\n         * 转换含有rigidbody的子节点\r\n         * @param node \r\n         */\r\n        handleBox2dBody(node: cc.Node) {\r\n            let b2Body = new b2data.Box2DBody()\r\n            b2Body.name = node.name\r\n            b2Body.oid = this.getBodyNodeUID(node)\r\n            let comps = node.getComponents(cc.Component)\r\n                // 过滤掉禁用的\r\n                .filter(comp => comp.enabled)\r\n            for (let comp of comps) {\r\n                let b2Comp = this.handleBox2dComponent(comp) as b2data.Component\r\n                if (b2Comp) {\r\n                    b2Comp.ctype = comp.constructor.name\r\n                    b2Comp.oid = this.getCompUID(comp)\r\n                    b2Body.components.push(b2Comp)\r\n                }\r\n            }\r\n            // {\r\n            //     let b2Comp = this.handleTransform(node)\r\n            //     b2Body.components.push(b2Comp as any)\r\n            // }\r\n\r\n            {\r\n                this.tryRun(`转换碰撞分组信息失败: ${node.parent.name}/${node.name}`, () => {\r\n                    let collisionGroup = this.handleCollisionGroup(node)\r\n                    b2Body.collisionGroup = collisionGroup\r\n                })\r\n            }\r\n\r\n            {\r\n                let transform = new b2data.Transform()\r\n                transform.oid = \"transform_\" + this.getBodyNodeUID(node)\r\n                transform.position = convCCVec3(node.position)\r\n                transform.rotation = -node.angle\r\n                transform.ctype = \"transform\"\r\n\r\n                b2Body.transform = transform\r\n            }\r\n\r\n            return b2Body\r\n        }\r\n\r\n        /**\r\n         * 转换碰撞分组信息\r\n         * @param node \r\n         */\r\n        handleCollisionGroup(node: cc.Node) {\r\n            let collisionGroup = new b2data.CollisionGroup()\r\n            let collisionComp = node.getComponent(CCB2CollisionComp)\r\n            if (collisionComp != null) {\r\n                let collisionInfo = collisionComp.toJson()\r\n                collisionGroup.enabled = true\r\n                collisionGroup.categoryBits = (collisionInfo.categoryBits || \"\").replace(/；/mg, \";\")\r\n                collisionGroup.groupIndex = (collisionInfo.groupIndex || \"\").replace(/；/mg, \";\")\r\n                collisionGroup.maskBits = (collisionInfo.maskBits || \"\").replace(/；/mg, \";\")\r\n            }\r\n            return collisionGroup\r\n        }\r\n\r\n        // /**\r\n        //  * 转换方位\r\n        //  * @param node \r\n        //  */\r\n        // handleTransform(node: cc.Node) {\r\n        //     let transform = new b2data.Transform()\r\n        //     transform.oid = \"transform_\" + this.getBodyNodeUID(node)\r\n        //     transform.position = convCCVec3(node.position)\r\n        //     transform.rotation = -node.angle\r\n        //     transform.ctype = \"transform\"\r\n        //     return transform\r\n        // }\r\n\r\n        /**\r\n         * 转换技能组件\r\n         * @param comp \r\n         */\r\n        handleSkillComp(comp: CCB2SkillComp) {\r\n            return this.tryRun(`转换组件失败: ${comp.node.parent.name}/${comp.node.name}/${comp.name}`, () => {\r\n                if (comp instanceof CCB2SkillComp && comp.enabled) {\r\n                    let data = comp.toJson()\r\n                    let result = new b2data.SkillExtra()\r\n                    for (let key of Object.getOwnPropertyNames(data)) {\r\n                        result[key] = data[key]\r\n                    }\r\n                    return result as b2data.ISkillExtra\r\n                }\r\n                return null\r\n            })\r\n        }\r\n\r\n        /**\r\n         * 转换box2d组件\r\n         * @param comp \r\n         */\r\n        handleBox2dComponent(comp: cc.Component) {\r\n            return this.tryRun(`转换box2d组件失败: ${comp.node.parent.name}/${comp.node.name}/${comp.name}`, () => {\r\n                let name = comp.constructor.name\r\n                let handleKey = name.substr(3)\r\n                /**\r\n                 * 反射转换组件处理函数\r\n                 */\r\n                let call = this[`handle${handleKey}`] as (comp: cc.Component) => b2data.Component\r\n                if (call) {\r\n                    let b2Comp = call.call(this, comp)\r\n                    return b2Comp\r\n                } else {\r\n                    if ([\"cc_Sprite\"].indexOf(name) < 0) {\r\n                        console.log(`skip handle ${name}`)\r\n                    }\r\n                }\r\n                return null\r\n            })\r\n        }\r\n\r\n        handlers: { [key: string]: Function } = {}\r\n        /**\r\n         * 注册box2d组件转换函数\r\n         */\r\n        registerHandler() {\r\n            this.handlers[cc.RigidBody.name] = (comp) => this.handleRigidBody(comp)\r\n            this.handlers[cc.PhysicsPolygonCollider.name] = (comp) => this.handlePhysicsPolygonCollider(comp)\r\n            this.handlers[cc.RevoluteJoint.name] = (comp) => this.handleRevoluteJoint(comp)\r\n            this.handlers[cc.PhysicsBoxCollider.name] = (comp) => this.handlePhysicsBoxCollider(comp)\r\n            this.handlers[cc.PhysicsCircleCollider.name] = (comp) => this.handlePhysicsCircleCollider(comp)\r\n            this.handlers[cc.WheelJoint.name] = (comp) => this.handleWheelJoint(comp)\r\n            this.handlers[cc.WeldJoint.name] = (comp) => this.handleWeldJoint(comp)\r\n            this.handlers[cc.PrismaticJoint.name] = (comp) => this.handlePrismaticJoint(comp)\r\n        }\r\n\r\n        handlePrismaticJoint(comp: cc.PrismaticJoint) {\r\n            let dataComp = new b2data.PrismaticJoint()\r\n            this.copyJointAttrs(dataComp, comp)\r\n            dataComp.enableMotor = comp.enableMotor\r\n            dataComp.localAxisA = convCCVec2(comp.localAxisA)\r\n            dataComp.motorSpeed = comp.motorSpeed\r\n            dataComp.oid = this.getCompUID(comp)\r\n\r\n            dataComp.localAxisA = convCCVec2(comp.localAxisA)\r\n            dataComp.referenceAngle = comp.referenceAngle\r\n            dataComp.enableLimit = comp.enableLimit\r\n            dataComp.enableMotor = comp.enableMotor\r\n            dataComp.lowerLimit = comp.lowerLimit\r\n            dataComp.upperLimit = comp.upperLimit\r\n            dataComp.maxMotorForce = comp.maxMotorForce\r\n            dataComp.motorSpeed = comp.motorSpeed\r\n\r\n            return dataComp\r\n        }\r\n\r\n        handleWheelJoint(comp: cc.WheelJoint) {\r\n            let dataComp = new b2data.WheelJoint()\r\n            this.copyJointAttrs(dataComp, comp)\r\n            dataComp.dampingRatio = comp.dampingRatio\r\n            dataComp.enableMotor = comp.enableMotor\r\n            dataComp.frequency = comp.frequency\r\n            dataComp.localAxisA = convCCVec2(comp.localAxisA)\r\n            dataComp.maxMotorTorque = comp.maxMotorTorque\r\n            dataComp.motorSpeed = comp.motorSpeed\r\n            dataComp.oid = this.getCompUID(comp)\r\n            return dataComp\r\n        }\r\n\r\n        handleWeldJoint(comp: cc.WeldJoint) {\r\n            let dataComp = new b2data.WeldJoint()\r\n            this.copyJointAttrs(dataComp, comp)\r\n            dataComp.referenceAngle = comp.referenceAngle\r\n            dataComp.dampingRatio = comp.dampingRatio\r\n            dataComp.frequency = comp.frequency\r\n            dataComp.oid = this.getCompUID(comp)\r\n            return dataComp\r\n        }\r\n\r\n        handleRigidBody(comp: cc.RigidBody) {\r\n            if (comp) {\r\n                let dataComp = new b2data.RigidBody()\r\n                dataComp.ctype = cc.RigidBody.name\r\n                dataComp.oid = this.getCompUID(comp)\r\n                dataComp.enabledContactListener = comp.enabledContactListener\r\n                dataComp.bullet = comp.bullet\r\n                dataComp.type = comp.type\r\n                dataComp.allowSleep = comp.allowSleep\r\n                dataComp.gravityScale = comp.gravityScale\r\n                dataComp.linearDamping = comp.linearDamping\r\n                dataComp.angularDamping = comp.angularDamping\r\n                dataComp.linearVelocity = convCCVec2(comp.linearVelocity)\r\n                dataComp.angularVelocity = comp.angularVelocity\r\n                dataComp.fixedRotation = comp.fixedRotation\r\n                dataComp.awake = true\r\n                dataComp.awakeOnLoad = comp.awakeOnLoad\r\n                // dataComp.active = comp.active\r\n                dataComp.active = true\r\n                return dataComp\r\n            }\r\n        }\r\n\r\n        copyPhysicsColliderAttrs(dataComp: b2data.PhysicsCollider, comp: cc.PhysicsCollider) {\r\n            dataComp.body = this.handleRigidBody(comp.body)\r\n            dataComp.density = comp.density\r\n            dataComp.friction = comp.friction\r\n            dataComp.restitution = comp.restitution\r\n            dataComp.sensor = comp.sensor\r\n            dataComp.tag = comp.tag\r\n\r\n            let sprite = comp.getComponent(cc.Sprite)\r\n            if (sprite) {\r\n                if (sprite.spriteFrame) {\r\n                    let displayKey = sprite.spriteFrame.name\r\n                    dataComp.displayKey = displayKey\r\n                }\r\n            }\r\n\r\n            return dataComp\r\n        }\r\n\r\n        copyJointAttrs(dataComp: b2data.Joint, comp: cc.Joint) {\r\n            dataComp.anchor = convCCVec2(comp.anchor)\r\n            dataComp.collideConnected = comp.collideConnected\r\n            dataComp.connectedAnchor = convCCVec2(comp.connectedAnchor)\r\n            dataComp.connectedBody = this.handleRigidBody(comp.connectedBody)\r\n            return dataComp\r\n        }\r\n\r\n        handlePhysicsCircleCollider(comp: cc.PhysicsCircleCollider) {\r\n            let dataComp = new b2data.PhysicsCircleCollider()\r\n            this.copyPhysicsColliderAttrs(dataComp, comp)\r\n            dataComp.offset = convCCVec2(comp.offset)\r\n            dataComp.radius = comp.radius\r\n            return dataComp\r\n        }\r\n        handlePhysicsBoxCollider(comp: cc.PhysicsBoxCollider) {\r\n            let dataComp = new b2data.PhysicsBoxCollider()\r\n            this.copyPhysicsColliderAttrs(dataComp, comp)\r\n            dataComp.offset = convCCVec2(comp.offset)\r\n            dataComp.size = convCCSize2(comp.size)\r\n            return dataComp\r\n        }\r\n\r\n        handlePhysicsPolygonCollider(comp: cc.PhysicsPolygonCollider) {\r\n            let dataComp = new b2data.PhysicsPolygonCollider()\r\n            this.copyPhysicsColliderAttrs(dataComp, comp)\r\n            dataComp.body = this.handleRigidBody(comp.body)\r\n            dataComp.offset = convCCVec2(comp.offset)\r\n            dataComp.points = comp.points.map(pt => convCCVec2(pt))\r\n            return dataComp\r\n        }\r\n\r\n        handleRevoluteJoint(comp: cc.RevoluteJoint) {\r\n            let dataComp = new b2data.RevoluteJoint()\r\n            this.copyJointAttrs(dataComp, comp)\r\n            dataComp.enableLimit = comp.enableLimit\r\n            dataComp.enableMotor = comp.enableMotor\r\n            dataComp.lowerAngle = comp.lowerAngle\r\n            dataComp.maxMotorTorque = comp.maxMotorTorque\r\n            dataComp.motorSpeed = comp.motorSpeed\r\n            dataComp.referenceAngle = comp.referenceAngle\r\n            dataComp.upperAngle = comp.upperAngle\r\n            return dataComp\r\n        }\r\n\r\n    }\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nnamespace gcc.box2d.tools {\r\n\tconst { ccclass, property, menu } = cc._decorator;\r\n\r\n\r\n\t/**\r\n\t * 碰撞组件基类\r\n\t * - 包括设置分组信息\r\n\t */\r\n\texport class CCB2CollisionComp extends cc.Component {\r\n\t\ttoJson(): { oid: string, groupIndex: string, categoryBits: string, maskBits: string, } {\r\n\t\t\treturn null\r\n\t\t}\r\n\t}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nnamespace gcc.box2d.tools {\r\n\tconst { ccclass, property, menu } = cc._decorator;\r\n\r\n\t/**\r\n\t * 技能组件基类\r\n\t */\r\n\texport class CCB2SkillComp extends cc.Component {\r\n\r\n\t\t@property({ displayName: \"备注\", editorOnly: true, })\r\n\t\tmynote: string = \"\"\r\n\r\n\t\ttoJson(): { oid: string, skillType: string, } {\r\n\t\t\treturn {\r\n\t\t\t\toid: this.uuid,\r\n\t\t\t\tskillType: \"\",\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetSelfRigidBody() {\r\n\t\t\treturn this.getComponent(cc.RigidBody)\r\n\t\t}\r\n\r\n\t\tgetSelfUID() {\r\n\t\t\treturn this.getCompUID(this)\r\n\t\t}\r\n\r\n\t\tgetSelfNodeUID() {\r\n\t\t\treturn this.getBodyNodeUID(this.node)\r\n\t\t}\r\n\r\n\t\tgetBodyNodeUID(node: cc.Node) {\r\n\t\t\treturn nodeUIDTool.getBodyNodeUID(node)\r\n\t\t\t// return `uid^${node.parent.name}^${node.name}`\r\n\t\t\t// return node.uuid\r\n\t\t}\r\n\r\n\t\tgetCompUID(comp: cc.Component) {\r\n\t\t\treturn nodeUIDTool.getCompUID(comp)\r\n\t\t\t// return `uid^${comp.node.parent.name}^${comp.node.name}^${comp.name}`\r\n\t\t\t// return comp.uuid\r\n\t\t}\r\n\r\n\t\tgetNodeUID(node: cc.Node) {\r\n\t\t\treturn nodeUIDTool.getNodeUID(node)\r\n\t\t\t// return `uid^${node.name}`\r\n\t\t\t// return node.uuid\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","// Learn TypeScript:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\nnamespace gcc.box2d.tools {\r\n\texport class CCNodeUIDTool {\r\n\t\tuuidConvMap: { [key: string]: number } = {}\r\n\t\tuuidAcc: number = 1\r\n\t\treset() {\r\n\t\t\tthis.uuidConvMap = {}\r\n\t\t\tthis.uuidAcc = 1\r\n\t\t}\r\n\t\tgetUIDNum(uid: string) {\r\n\t\t\tlet num = this.uuidConvMap[uid]\r\n\t\t\tif (num == null) {\r\n\t\t\t\tnum = this.uuidConvMap[uid] = this.uuidAcc++\r\n\t\t\t}\r\n\t\t\treturn num\r\n\t\t}\r\n\t\tgetBodyNodeUID(node: cc.Node) {\r\n\t\t\tlet num = this.getUIDNum(node.uuid)\r\n\t\t\treturn `uid%${node.parent.name}%${node.name}%${num}`\r\n\t\t\t// return node.uuid\r\n\t\t}\r\n\r\n\t\tgetCompUID(comp: cc.Component) {\r\n\t\t\tlet num = this.getUIDNum(comp.uuid)\r\n\t\t\treturn `uid%${comp.node.parent.name}%${comp.node.name}%${comp.name}%${num}`\r\n\t\t\t// return comp.uuid\r\n\t\t}\r\n\r\n\t\tgetNodeUID(node: cc.Node) {\r\n\t\t\tlet num = this.getUIDNum(node.uuid)\r\n\t\t\treturn `uid%${node.name}%${num}`\r\n\t\t\t// return node.uuid\r\n\t\t}\r\n\t}\r\n\r\n\texport const nodeUIDTool = new CCNodeUIDTool()\r\n}\r\n","\r\n// @ts-nocheck\r\nconst {\r\n\tConeCollider, SimplexCollider,\r\n\tAudioSource,\r\n\tCamera,\r\n\tLight,\r\n\tMeshRenderer,\r\n\tSkinnedMeshRenderer,\r\n\tSkinnedMeshBatchRenderer,\r\n\tSkinnedMeshUnit,\r\n\tDirectionalLight,\r\n\tSphereLight,\r\n\tSpotLight,\r\n\tAnimation,\r\n\tAnimationComponent,\r\n\tSkeletalAnimation,\r\n\tBillboard,\r\n\tLine,\r\n\tParticleSystem,\r\n\tCollider,\r\n\tBoxCollider,\r\n\tSphereCollider,\r\n\tCapsuleCollider,\r\n\tMeshCollider,\r\n\tCylinderCollider,\r\n\tRigidBody,\r\n\tPhysicsMaterial,\r\n\tCanvas,\r\n\tUIRenderable,\r\n\tUITransform,\r\n\tButton,\r\n\tEditBox,\r\n\tLayout,\r\n\tMask,\r\n\tProgressBar,\r\n\tRichText,\r\n\tScrollBar,\r\n\tScrollView,\r\n\tSlider,\r\n\tSprite,\r\n\tToggle,\r\n\tToggleContainer,\r\n\tUIMeshRenderer,\r\n\tWidget,\r\n\tLabelOutline,\r\n\tGraphics,\r\n\tPageView,\r\n\tPageViewIndicator,\r\n\tUIStaticBatch,\r\n\tUIOpacity,\r\n\tSafeArea,\r\n\tUICoordinateTracker,\r\n\tBlockInputEvents,\r\n\tLabel,\r\n} = cc\r\n\r\n//@ts-expect-error\r\ncc.Collider = Collider\r\n//@ts-expect-error\r\ncc.CapsuleCollider = CapsuleCollider\r\n//@ts-expect-error\r\ncc.SphereCollider = SphereCollider\r\n//@ts-expect-error\r\ncc.CylinderCollider = CylinderCollider\r\n//@ts-expect-error\r\ncc.ConeCollider = ConeCollider\r\n//@ts-expect-error\r\ncc.BoxCollider = BoxCollider\r\n//@ts-expect-error\r\ncc.SimplexCollider = SimplexCollider\r\n//@ts-expect-error\r\ncc.MeshCollider = MeshCollider\r\n//@ts-expect-error\r\ncc.RigidBody = RigidBody\r\n//@ts-expect-error\r\ncc.PhysicsMaterial = PhysicsMaterial\r\n//@ts-expect-error\r\ncc.AudioSource = AudioSource\r\n//@ts-expect-error\r\ncc.Camera = Camera\r\n//@ts-expect-error\r\ncc.Light = Light\r\n//@ts-expect-error\r\ncc.MeshRenderer = MeshRenderer\r\n//@ts-expect-error\r\ncc.SkinnedMeshRenderer = SkinnedMeshRenderer\r\n//@ts-expect-error\r\ncc.SkinnedMeshBatchRenderer = SkinnedMeshBatchRenderer\r\n//@ts-expect-error\r\ncc.SkinnedMeshUnit = SkinnedMeshUnit\r\n//@ts-expect-error\r\ncc.DirectionalLight = DirectionalLight\r\n//@ts-expect-error\r\ncc.SphereLight = SphereLight\r\n//@ts-expect-error\r\ncc.SpotLight = SpotLight\r\n//@ts-expect-error\r\ncc.Animation = Animation ?? AnimationComponent\r\n//@ts-expect-error\r\ncc.SkeletalAnimation = SkeletalAnimation\r\n//@ts-expect-error\r\ncc.Billboard = Billboard\r\n//@ts-expect-error\r\ncc.Line = Line\r\n//@ts-expect-error\r\ncc.ParticleSystem = ParticleSystem\r\n//@ts-expect-error\r\ncc.Canvas = Canvas\r\n//@ts-expect-error\r\ncc.UIRenderable = UIRenderable\r\n//@ts-expect-error\r\ncc.UITransform = UITransform\r\n//@ts-expect-error\r\ncc.Button = Button\r\n//@ts-expect-error\r\ncc.EditBox = EditBox\r\n//@ts-expect-error\r\ncc.Layout = Layout\r\n//@ts-expect-error\r\ncc.Mask = Mask\r\n//@ts-expect-error\r\ncc.ProgressBar = ProgressBar\r\n//@ts-expect-error\r\ncc.RichText = RichText\r\n//@ts-expect-error\r\ncc.ScrollBar = ScrollBar\r\n//@ts-expect-error\r\ncc.ScrollView = ScrollView\r\n//@ts-expect-error\r\ncc.Slider = Slider\r\n//@ts-expect-error\r\ncc.Sprite = Sprite\r\n//@ts-expect-error\r\ncc.Toggle = Toggle\r\n//@ts-expect-error\r\ncc.ToggleContainer = ToggleContainer\r\n//@ts-expect-error\r\ncc.UIMeshRenderer = UIMeshRenderer\r\n//@ts-expect-error\r\ncc.Widget = Widget\r\n//@ts-expect-error\r\ncc.LabelOutline = LabelOutline\r\n//@ts-expect-error\r\ncc.Graphics = Graphics\r\n//@ts-expect-error\r\ncc.PageView = PageView\r\n//@ts-expect-error\r\ncc.PageViewIndicator = PageViewIndicator\r\n//@ts-expect-error\r\ncc.UIStaticBatch = UIStaticBatch\r\n//@ts-expect-error\r\ncc.UIOpacity = UIOpacity\r\n//@ts-expect-error\r\ncc.SafeArea = SafeArea\r\n//@ts-expect-error\r\ncc.UICoordinateTracker = UICoordinateTracker\r\n//@ts-expect-error\r\ncc.BlockInputEvents = BlockInputEvents\r\n//@ts-expect-error\r\ncc.Label = Label\r\n","\nnamespace gcc.prefab {\n    const { ccclass, property, executeInEditMode } = cc._decorator;\n\n    // @ccclass('ChildrenLoader')\n    @executeInEditMode\n    export class ChildrenLoader extends cc.Component {\n\n        @property({ type: [cc.Prefab] })\n        childrenPrefabs: cc.Prefab[] = []\n\n        private _showChildren: boolean = false;\n        public get showChildren(): boolean {\n            return this._showChildren;\n        }\n\n        @property({ type: cc.Boolean, tooltip: \"是否展开预制体节点\", displayName: \"是否展开预制体节点\", })\n        public set showChildren(value: boolean) {\n            this._showChildren = value;\n\n            this.updateChildrenView()\n        }\n\n        protected updateChildrenView() {\n            if (this._showChildren) {\n                this.showProtectedChildren()\n            } else {\n                this.showPrivateChildren()\n            }\n        }\n        protected showPrivateChildren() {\n            this.cleanChildren()\n\n            for (let prefab of this.childrenPrefabs) {\n                let prefabName = prefab.data && prefab.data.name\n                let uuid = prefab[\"_uuid\"] || prefab[\"url\"]\n                let pnode2 = new cc.Node(`&${prefabName}_预制体节点_${uuid}`)\n                pnode2.addComponent(RuntimeNewNode)\n\n                let pnode = new cc.PrivateNode(`pnode_${prefabName}_${uuid}`)\n                let node = cc.instantiate(prefab)\n\n                node.parent = pnode\n                pnode.parent = pnode2\n                pnode2.parent = this.node\n            }\n        }\n\n        protected showProtectedChildren() {\n            this.cleanChildren()\n\n            for (let prefab of this.childrenPrefabs) {\n                let prefabName = prefab.data && prefab.data.name\n                let pnode = new cc.Node(`&${prefabName}_此节点下所有内容修改后无法保存`)\n                pnode.addComponent(RuntimeNewNode)\n                let node = cc.instantiate(prefab)\n                node.parent = pnode\n                pnode.parent = this.node\n            }\n        }\n\n        protected cleanChildren() {\n            let rmList = this.node.children.filter((node) => node.getComponent(RuntimeNewNode) != null)\n            rmList.forEach(node => {\n                node.parent = null\n                node.destroy()\n            })\n        }\n\n        onLoad() {\n            if (CC_EDITOR) {\n                this.updateChildrenView()\n            } else {\n                this.cleanChildren()\n\n                for (let prefab of this.childrenPrefabs) {\n                    let node = cc.instantiate(prefab)\n                    node.addComponent(RuntimeNewNode)\n                    node.parent = this.node\n                }\n            }\n        }\n\n    }\n}\n","\n\nnamespace gcc.prefab {\n\tconst { ccclass, property } = cc._decorator;\n\n\t// @ccclass('RuntimeNewNode')\n\texport class RuntimeNewNode extends cc.Component {\n\t}\n}\n","\nnamespace gcc.prefab {\n    const { ccclass, property } = cc._decorator;\n\n    // @ccclass('SimpleNodeLoader')\n    export class SimpleNodeLoader extends cc.Component {\n\n        @property({ type: [cc.Prefab] })\n        childrenPrefabs: cc.Prefab[] = []\n\n        @property({ type: [cc.Prefab] })\n        siblingPrefabs: cc.Prefab[] = []\n\n        @property\n        siblingOrder: number = -1\n\n        onLoad() {\n            const selfNode = this.node\n            const selfParent = this.node.parent\n            for (let prefab of this.childrenPrefabs) {\n                let node = cc.instantiate(prefab)\n                node.parent = selfNode\n            }\n            for (let prefab of this.siblingPrefabs) {\n                let node = cc.instantiate(prefab)\n                node.parent = selfParent\n\n                if (this.siblingOrder >= 0) {\n                    node.setSiblingIndex(this.siblingOrder)\n                }\n\n            }\n\n        }\n\n    }\n}\n","\r\n/**\r\n * 目标：\r\n * - 支持失败的资源重新加载生效\r\n * - 对于异步加载成功的节点，支持坐标更改应用\r\n */\r\n\r\nnamespace gcc.resloader {\r\n\texport interface IResLoadListener<T> {\r\n\t\tonLoad(call: (res: T) => void)\r\n\t\tonError(call: (err: Error) => void)\r\n\t}\r\n\r\n\t/**\r\n\t * 资源加载通知\r\n\t */\r\n\texport class ResLoadNotifier<T> implements IResLoadListener<T>{\r\n\t\tisFinished: boolean = false\r\n\t\tisLoaded: boolean = false\r\n\t\terr?: Error\r\n\t\tres?: T\r\n\t\tprotected onLoadList: ((res: T) => void)[] = []\r\n\t\tonLoad(call: (res: T) => void) {\r\n\t\t\tthis.onLoadList.push(call)\r\n\r\n\t\t\tif (this.isFinished && this.isLoaded) {\r\n\t\t\t\tcall(this.res!)\r\n\t\t\t}\r\n\t\t}\r\n\t\tnotifyOnLoad(res: T) {\r\n\t\t\tthis.isFinished = true\r\n\t\t\tthis.isLoaded = true\r\n\t\t\tthis.res = res\r\n\t\t\tdelete this.err\r\n\t\t\tthis.onLoadList.slice().forEach((call) => {\r\n\t\t\t\tcall(res)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tprotected onErrorList: ((err: Error) => void)[] = []\r\n\t\tonError(call: (err: Error) => void) {\r\n\t\t\tthis.onErrorList.push(call)\r\n\r\n\t\t\tif (this.isFinished && (!this.isLoaded)) {\r\n\t\t\t\tcall(this.err!)\r\n\t\t\t}\r\n\t\t}\r\n\t\tnotifyOnError(err: Error) {\r\n\t\t\tthis.isFinished = true\r\n\t\t\tthis.isLoaded = false\r\n\t\t\tthis.err = err\r\n\t\t\tthis.onErrorList.slice().forEach((call) => {\r\n\t\t\t\tcall(err)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\texport type LoadPrefabFunc = () => ResLoadNotifier<cc.Prefab>\r\n\texport type PrefabSource = string | ResLoadNotifier<cc.Prefab>\r\n\r\n\t/**\r\n\t * 预制体动态加载工具\r\n\t */\r\n\texport class ResLoader {\r\n\t\tprotected loadMap: { [key: string]: ResLoadNotifier<any> } = {}\r\n\t\tgetNotifier(uri: string) {\r\n\t\t\tlet notifier = this.loadMap[uri]\r\n\t\t\tif (notifier == null) {\r\n\t\t\t\tnotifier = new ResLoadNotifier<cc.Prefab>()\r\n\t\t\t\tthis.loadMap[uri] = notifier\r\n\t\t\t}\r\n\t\t\treturn notifier\r\n\t\t}\r\n\t\texistNotifier(uri: string): boolean {\r\n\t\t\tlet notifier = this.loadMap[uri]\r\n\t\t\treturn !!notifier\r\n\t\t}\r\n\t\taddNotifier(uri: string, notifier: ResLoadNotifier<any>): void {\r\n\t\t\tthis.loadMap[uri] = notifier\r\n\t\t}\r\n\r\n\t\tloadPrefab(url: string): IResLoadListener<cc.Prefab> {\r\n\t\t\tlet existNotifier = this.existNotifier(url)\r\n\t\t\tlet notifier = this.getNotifier(url)\r\n\t\t\tif (!existNotifier) {\r\n\t\t\t\tcc && cc[\"loader\"] && cc[\"loader\"].loadRes(url, cc[\"Prefab\"], (err, asset) => {\r\n\t\t\t\t\tlet isLoaded = (err == null && asset != null)\r\n\t\t\t\t\tif (isLoaded) {\r\n\t\t\t\t\t\tnotifier.notifyOnLoad(asset)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 加载失败\r\n\t\t\t\t\t\tconsole.error(`load res failed, url:${url}, err:`, err)\r\n\t\t\t\t\t\tnotifier.notifyOnError(err)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn notifier\r\n\t\t}\r\n\r\n\t}\r\n\r\n\texport const resLoader = new ResLoader()\r\n\r\n\texport type CCPrefabLoadLisenter = resloader.IResLoadListener<cc.Prefab>\r\n\r\n}\r\n","namespace gcc.respool {\r\n\texport interface IAsset {\r\n\t\toid: number | string\r\n\t}\r\n\r\n\texport class AssetsManager {\r\n\t\tprotected pool: { [key: string]: object } = {}\r\n\r\n\t\tprotected getSubPool(key: string) {\r\n\t\t\tlet subPool = this.pool[key]\r\n\t\t\tif (subPool == null) {\r\n\t\t\t\tsubPool = this.pool[key] = {}\r\n\t\t\t}\r\n\t\t\treturn subPool\r\n\t\t}\r\n\r\n\t\tput(key: string, asset: IAsset) {\r\n\t\t\tlet subPool = this.getSubPool(key)\r\n\t\t\tsubPool[asset.oid] = asset\r\n\t\t}\r\n\r\n\t\tputWithId(key: string, asset: any, oid: string = \"null\") {\r\n\t\t\tlet subPool = this.getSubPool(key)\r\n\t\t\tsubPool[oid] = asset\r\n\t\t}\r\n\r\n\t\tgetGroupKeys(key: string): string[] {\r\n\t\t\tlet subPool = this.getSubPool(key)\r\n\t\t\tlet keys = Object.keys(subPool)\r\n\t\t\treturn keys\r\n\t\t}\r\n\r\n\t\tgetWithDefault<T>(key: string, oid: string, call: () => T): T {\r\n\t\t\tlet subPool = this.getSubPool(key)\r\n\t\t\tlet asset = subPool[oid]\r\n\t\t\tif (asset == undefined) {\r\n\t\t\t\tasset = call()\r\n\t\t\t\tsubPool[oid] = asset\r\n\t\t\t}\r\n\t\t\treturn asset\r\n\t\t}\r\n\r\n\t\tget<T>(key: string, id: string | number = \"null\"): T {\r\n\t\t\tlet subPool = this.getSubPool(key)\r\n\t\t\treturn subPool[id]\r\n\t\t}\r\n\r\n\t\tdelete(key: string, id: string) {\r\n\t\t\tlet subPool = this.getSubPool(key)\r\n\t\t\tdelete subPool[id]\r\n\t\t}\r\n\r\n\t\tclearGroup(key: string) {\r\n\t\t\tdelete this.pool[key]\r\n\t\t}\r\n\t}\r\n\r\n\texport const sharedAssetsManager = new AssetsManager()\r\n\r\n}\r\n","namespace gcc.respool {\r\n\texport class ResMap<T> {\r\n\t\tresMap: { [key: string]: T } = fsync.EmptyTable()\r\n\t\tgetItem<F extends T = T>(key: string): F {\r\n\t\t\treturn this.resMap[key] as F\r\n\t\t}\r\n\r\n\t\tsetItem<F extends T = T>(key: string, item: F): void {\r\n\t\t\tthis.resMap[key] = item\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tthis.resMap = fsync.EmptyTable()\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * 资源池\r\n\t */\r\n\texport class ResPoolMap<T> {\r\n\t\tprotected resPoolMap: { [key: string]: T[] } = fsync.EmptyTable()\r\n\r\n\t\tgetResPool(key: string): T[] {\r\n\t\t\tlet pool = this.resPoolMap[key]\r\n\t\t\tif (pool == null) {\r\n\t\t\t\tpool = []\r\n\t\t\t\tthis.resPoolMap[key] = pool\r\n\t\t\t}\r\n\t\t\treturn pool\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tthis.resPoolMap = fsync.EmptyTable()\r\n\t\t}\r\n\r\n\t\tforEachAllRes(call: (node: T, key: string) => void) {\r\n\t\t\tfor (let key in this.resPoolMap) {\r\n\t\t\t\tfor (let node of this.resPoolMap[key]) {\r\n\t\t\t\t\tcall(node, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","/// <reference path=\"./ResPoolMap.ts\" />\r\n\r\nnamespace gcc.respool {\r\n\r\n\t/**\r\n\t * cocos节点池\r\n\t */\r\n\texport class CCNodePoolMap extends ResPoolMap<cc.Node> {\r\n\r\n\t\tgetOrCreateNodeWithPrefabUrl(prefabId: string, prefabUrl: string, call: (node: cc.Node, err: Error) => void) {\r\n\t\t\tlet pool = this.getResPool(prefabId)\r\n\t\t\tif (pool.length > 0) {\r\n\t\t\t\tconst node = pool.pop()\r\n\t\t\t\tnode.emit(\"ecs:reuse\")\r\n\r\n\t\t\t\tcall(node, null)\r\n\t\t\t} else {\r\n\t\t\t\tcc.resources.load<cc.Prefab>(prefabUrl, (err, prefab: cc.Prefab) => {\r\n\t\t\t\t\tif (err) {\r\n\t\t\t\t\t\tcall(null, err)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar node = this.getOrCreateNodeWithPrefab(prefabId, prefab)\r\n\t\t\t\t\tcall(node, null)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgetOrCreateNodeWithPrefab(prefabId: string, prefab: cc.Prefab) {\r\n\t\t\tlet pool = this.getResPool(prefabId)\r\n\t\t\tif (pool.length > 0) {\r\n\t\t\t\tconst node = pool.pop()\r\n\t\t\t\tnode.emit(\"ecs:reuse\")\r\n\t\t\t\treturn node\r\n\t\t\t} else {\r\n\t\t\t\tif (prefab != null) {\r\n\t\t\t\t\tconst node = ccNodePreloader.instantiate(prefab)\r\n\t\t\t\t\tnode.emit(\"ecs:reuse\")\r\n\t\t\t\t\treturn node\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\r\n\t\tgetOrCreateNodeDynamicly(prefabId: string, prefabLoadListener: resloader.CCPrefabLoadLisenter, call: (node: cc.Node) => void) {\r\n\t\t\tlet pool = this.getResPool(prefabId)\r\n\t\t\tif (pool.length > 0) {\r\n\t\t\t\tconst node = pool.pop()\r\n\t\t\t\tnode.emit(\"ecs:reuse\")\r\n\r\n\t\t\t\tcall(node)\r\n\t\t\t} else {\r\n\t\t\t\tprefabLoadListener.onLoad((prefab) => {\r\n\t\t\t\t\tlet node = ccNodePreloader.instantiate(prefab)\r\n\t\t\t\t\tnode.emit(\"ecs:reuse\")\r\n\r\n\t\t\t\t\tcall(node)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tputNodeToCull(prefabId: string, node: cc.Node) {\r\n\t\t\tlet pool = this.getResPool(prefabId)\r\n\t\t\tif (pool.indexOf(node) < 0) {\r\n\t\t\t\tnode.position = new cc.Vec3(100000, 0, 0)\r\n\t\t\t\tlet animComps = node.getComponentsInChildren(cc.Animation)\r\n\t\t\t\tanimComps.forEach((comp) => {\r\n\t\t\t\t\tcomp.stop()\r\n\t\t\t\t})\r\n\t\t\t\tpool.push(node)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tputNodeToRemove(prefabId: string, node: cc.Node) {\r\n\t\t\tlet pool = this.getResPool(prefabId)\r\n\t\t\tif (pool.indexOf(node) < 0) {\r\n\t\t\t\t// node.position = new cc.Vec3(100000, 0, 0)\r\n\t\t\t\tnode.parent = null\r\n\t\t\t\tlet animComps = node.getComponentsInChildren(cc.Animation)\r\n\t\t\t\tanimComps.forEach((comp) => {\r\n\t\t\t\t\tcomp.stop()\r\n\t\t\t\t})\r\n\t\t\t\tpool.push(node)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tfor (let key in this.resPoolMap) {\r\n\t\t\t\tlet pool = this.resPoolMap[key]\r\n\t\t\t\tfor (let node of pool) {\r\n\t\t\t\t\tccNodePreloader.put(node)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.clear()\r\n\t\t}\r\n\t}\r\n}\r\n","/// <reference path=\"./CCNodePoolMap.ts\" />\r\n\r\nnamespace gcc.respool {\r\n\r\n\t/**\r\n\t * cocos节点池\r\n\t */\r\n\texport class CCEasyNodePoolMap extends CCNodePoolMap {\r\n\t\tprotected prefabUrlMap: { [key: string]: string } = {}\r\n\t\tprotected prefabMap: { [key: string]: cc.Prefab } = {}\r\n\t\tprotected prefabLoaderMap: { [key: string]: resloader.CCPrefabLoadLisenter } = {}\r\n\r\n\t\tregisterPrefabUrl(prefabId: string, prefabUrl: string) {\r\n\t\t\tthis.prefabUrlMap[prefabId] = prefabUrl\r\n\t\t\tif (this.prefabMap[prefabId] == null) {\r\n\t\t\t\tcc.resources.load<cc.Prefab>(prefabId, (err, prefab: cc.Prefab) => {\r\n\t\t\t\t\tif (err != null) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this.prefabMap[prefabId] == null) {\r\n\t\t\t\t\t\tthis.prefabMap[prefabId] = prefab\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tregisterPrefab(prefabId: string, prefab: cc.Prefab) {\r\n\t\t\tthis.prefabMap[prefabId] = prefab\r\n\t\t}\r\n\r\n\t\tregisterPrefabLoader(prefabId: string, prefabLoadListener: resloader.CCPrefabLoadLisenter) {\r\n\t\t\tthis.prefabLoaderMap[prefabId] = prefabLoadListener\r\n\t\t}\r\n\r\n\t\tloadPrefabRaw(prefabUrl: string, call: (prefab: cc.Prefab, err?: Error) => void) {\r\n\t\t\tcc.resources.load<cc.Prefab>(prefabUrl, (err, prefab: cc.Prefab) => {\r\n\t\t\t\tcall(prefab, err)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tloadPrefab(prefabId: string, call: (prefab: cc.Prefab, err?: Error) => void) {\r\n\t\t\tlet prefab = this.prefabMap[prefabId]\r\n\t\t\tif (prefab != null) {\r\n\t\t\t\tcall(prefab, null)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet prefabLoader = this.prefabLoaderMap[prefabId]\r\n\t\t\tif (prefabLoader != null) {\r\n\t\t\t\tprefabLoader.onLoad((prefab) => {\r\n\t\t\t\t\tcall(prefab, null)\r\n\t\t\t\t})\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet prefabUrl = this.prefabUrlMap[prefabId]\r\n\t\t\tif (prefabUrl != null) {\r\n\t\t\t\tthis.loadPrefabRaw(prefabUrl, call)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tcall(null, new Error(\"invalid prefabId\"))\r\n\t\t}\r\n\r\n\t\tgetNode(prefabId: string): cc.Node {\r\n\t\t\tlet prefab = this.prefabMap[prefabId]\r\n\t\t\tlet node = this.getOrCreateNodeWithPrefab(prefabId, prefab)\r\n\t\t\treturn node\r\n\t\t}\r\n\r\n\t\tloadNode(prefabId: string, call: (node: cc.Node, err?: Error) => void) {\r\n\t\t\tlet prefab = this.prefabMap[prefabId]\r\n\t\t\tif (prefab != null) {\r\n\t\t\t\tlet node = this.getOrCreateNodeWithPrefab(prefabId, prefab)\r\n\t\t\t\tcall(node)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet prefabLoader = this.prefabLoaderMap[prefabId]\r\n\t\t\tif (prefabLoader != null) {\r\n\t\t\t\tthis.getOrCreateNodeDynamicly(prefabId, prefabLoader, call)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tlet prefabUrl = this.prefabUrlMap[prefabId]\r\n\t\t\tif (prefabUrl != null) {\r\n\t\t\t\tthis.getOrCreateNodeWithPrefabUrl(prefabId, prefabUrl, call)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\r\n\t\t\tcall(null, new Error(\"no res found\"))\r\n\t\t}\r\n\r\n\t\tputNode(node: cc.Node, remove: boolean = false) {\r\n\t\t\tlet prefabId: string = node[CCNodeSaveKey]\r\n\t\t\tif (remove) {\r\n\t\t\t\tthis.putNodeToRemove(prefabId, node)\r\n\t\t\t} else {\r\n\t\t\t\tthis.putNodeToCull(prefabId, node)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","/// <reference path=\"./ResPoolMap.ts\" />\r\n\r\nnamespace gcc.respool {\r\n\r\n\tconst CCMYURL = \"myurl\"\r\n\texport const CCNodeSaveKey = \"mynodename\"\r\n\r\n\t/**\r\n\t * cocos节点预加载工具\r\n\t */\r\n\texport class CCNodePreloader extends ResPoolMap<cc.Node>{\r\n\t\tprotected _preloadTaskMap: { [key: string]: number }\r\n\r\n\t\tprotected _preShowTask: {\r\n\t\t\tparent: cc.Node\r\n\t\t\tduration: number\r\n\t\t}\r\n\r\n\t\tinit() {\r\n\t\t\tthis._preloadTaskMap = fsync.EmptyTable()\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\tstatic getNodeKey(node: cc.Node): string {\r\n\t\t\treturn node[CCNodeSaveKey]\r\n\t\t}\r\n\r\n\t\tstatic isRecyclableNode(node: cc.Node): boolean {\r\n\t\t\treturn !!node[CCNodeSaveKey]\r\n\t\t}\r\n\r\n\t\taddPrefabLoadTask(url: string, count: number = 0) {\r\n\t\t\tthis._preloadTaskMap[url] = this._preloadTaskMap[url] || 0\r\n\t\t\tthis._preloadTaskMap[url] += count\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\taddPreShowTask(parent: cc.Node, duration: number = 0) {\r\n\t\t\tthis._preShowTask = {\r\n\t\t\t\tparent: parent,\r\n\t\t\t\tduration: duration || (this._preShowTask && this._preShowTask.duration) || 0,\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\texecute(call: Function, onError?: (err: Error) => void) {\r\n\t\t\tlet onAllDone = () => {\r\n\t\t\t\tcall && call()\r\n\t\t\t}\r\n\t\t\tlet preloadTaskMap = this._preloadTaskMap\r\n\t\t\tlet urls = Object.keys(preloadTaskMap)\r\n\t\t\tcc.resources.load(urls.concat(), cc[\"Prefab\"], (err, reses: cc.Prefab[]) => {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tonError && onError(err)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet taskLength = urls.length\r\n\t\t\t\tlet doneCount = 0\r\n\t\t\t\tlet onOneTaskDone = () => {\r\n\t\t\t\t\tdoneCount++\r\n\t\t\t\t\tif (doneCount == taskLength) {\r\n\t\t\t\t\t\tonAllDone()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\turls.forEach((url, index) => {\r\n\t\t\t\t\tlet prefab = reses[index]\r\n\t\t\t\t\tif (prefab) {\r\n\t\t\t\t\t\tif (!prefab.name) {\r\n\t\t\t\t\t\t\tprefab.name = prefab.data.name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tlet saveKey = prefab.name\r\n\t\t\t\t\t\t// prefab[CCMYURL] = saveKey = url\r\n\t\t\t\t\t\tlet ls = this.resPoolMap[saveKey] = this.resPoolMap[saveKey] || []\r\n\t\t\t\t\t\tlet count = preloadTaskMap[url]\r\n\t\t\t\t\t\tfor (let i = 0; i < count; i++) {\r\n\t\t\t\t\t\t\tls.push(cc.instantiate(prefab))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._preShowTask) {\r\n\t\t\t\t\t\tlet parent = this._preShowTask.parent\r\n\t\t\t\t\t\tlet duration = this._preShowTask.duration\r\n\t\t\t\t\t\tthis.forEachAllRes((node) => {\r\n\t\t\t\t\t\t\tnode.parent = parent\r\n\t\t\t\t\t\t\tnode.active = false\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tlet comp = parent.getComponents(cc.Component)[0]\r\n\t\t\t\t\t\tif (comp) {\r\n\t\t\t\t\t\t\tcomp.scheduleOnce(() => {\r\n\t\t\t\t\t\t\t\tthis.forEachAllRes((node) => {\r\n\t\t\t\t\t\t\t\t\tnode.active = true\r\n\t\t\t\t\t\t\t\t\tnode.parent = null\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tonOneTaskDone()\r\n\t\t\t\t\t\t\t}, duration)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.forEachAllRes((node) => {\r\n\t\t\t\t\t\t\t\tnode.active = true\r\n\t\t\t\t\t\t\t\tnode.parent = null\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\tonOneTaskDone()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tonOneTaskDone()\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tclearTasks() {\r\n\t\t\tthis._preloadTaskMap = fsync.EmptyTable()\r\n\t\t\treturn this\r\n\t\t}\r\n\r\n\t\tinstantiate(prefab: cc.Prefab): cc.Node {\r\n\t\t\t// let url = prefab[CCMYURL]\r\n\t\t\tif (!prefab.name) {\r\n\t\t\t\tprefab.name = prefab.data.name\r\n\t\t\t}\r\n\t\t\tlet saveKey = prefab.name\r\n\t\t\tlet pool = this.resPoolMap[saveKey]\r\n\t\t\tlet node: cc.Node\r\n\t\t\tif (saveKey && pool && pool.length > 0) {\r\n\t\t\t\tnode = pool.pop()\r\n\t\t\t} else {\r\n\t\t\t\tnode = cc.instantiate(prefab)\r\n\t\t\t}\r\n\t\t\tif (!node[CCNodeSaveKey]) {\r\n\t\t\t\tnode[CCNodeSaveKey] = prefab.name\r\n\t\t\t}\r\n\t\t\treturn node\r\n\t\t}\r\n\r\n\t\tput(node: cc.Node) {\r\n\t\t\tif (cc.isValid(node)) {\r\n\t\t\t\tnode.parent = null\r\n\t\t\t\tlet saveKey = node[CCNodeSaveKey]\r\n\t\t\t\tif (!!saveKey) {\r\n\t\t\t\t\tlet pool = this.getResPool(saveKey)\r\n\t\t\t\t\tif (pool.indexOf(node) < 0) {\r\n\t\t\t\t\t\tpool.push(node)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (cc.isValid(node)) {\r\n\t\t\t\t\t\tnode.destroy()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.error(\"invalid saveKey\")\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tnode.parent = null\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error(\"invalid node to recycle:\", node)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\texport const ccNodePreloader = new CCNodePreloader().init()\r\n\r\n}\r\n","\r\nnamespace gcc.respool {\r\n\r\n\texport class MyNodePool {\r\n\t\tprivate static nodePoolMap: gcc.respool.CCEasyNodePoolMap = new gcc.respool.CCEasyNodePoolMap()\r\n\r\n\t\tstatic registerPrefabUrl(prefabId: string, prefabUrl: string) {\r\n\t\t\tthis.nodePoolMap.registerPrefabUrl(prefabId, prefabUrl)\r\n\t\t}\r\n\r\n\t\tstatic put(node: cc.Node) {\r\n\t\t\tthis.nodePoolMap.putNode(node)\r\n\t\t}\r\n\r\n\t\tstatic get(prefabId: string): cc.Node {\r\n\t\t\treturn this.nodePoolMap.getNode(prefabId)\r\n\t\t}\r\n\r\n\t\tstatic load(prefabId: string, call: (node: cc.Node, err?: Error) => void) {\r\n\t\t\tthis.nodePoolMap.loadNode(prefabId, (node, err) => {\r\n\t\t\t\tif (node != null) {\r\n\t\t\t\t\tcall(node, err)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.nodePoolMap.getOrCreateNodeWithPrefabUrl(prefabId, prefabId, (node, err) => {\r\n\t\t\t\t\tif (node != null) {\r\n\t\t\t\t\t\tthis.nodePoolMap.registerPrefabUrl(prefabId, prefabId)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcall(node, err)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tstatic loadPrefab(prefabId: string, call: (prefab: cc.Prefab, err?: Error) => void) {\r\n\t\t\tthis.nodePoolMap.loadPrefab(prefabId, (prefab, err) => {\r\n\t\t\t\tif (prefab != null) {\r\n\t\t\t\t\tcall(prefab, err)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.nodePoolMap.loadPrefab(prefabId, call)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","\nnamespace gcc.transform {\n\timport math = fsync.math\n\n\tconst Vec3 = cc.Vec3\n\ttype Vec3 = cc.Vec3\n\n\tconst Vec4 = cc.Vec4\n\ttype Vec4 = cc.Vec4\n\n\tconst Quat = cc.Quat\n\ttype Quat = cc.Quat\n\n\t/**\n\t * 需要改进，所有对cocos的依赖提前计算分离\n\t */\n\texport class TransformTool {\n\n\t\tinit() {\n\t\t\treturn this\n\t\t}\n\n\t\tconvVectorToPos3(pt: fsync.Vector3): Vec3 {\n\t\t\tlet pos = new Vec3()\n\t\t\tpos.x = pt.x\n\t\t\tpos.y = pt.y\n\t\t\tpos.z = pt.z\n\t\t\treturn pos\n\t\t}\n\t\tconvPos3ToVector(pt: Vec3, pout?: fsync.Vector3): fsync.Vector3 {\n\t\t\tif (pout == null) {\n\t\t\t\tpout = new fsync.Vector3()\n\t\t\t}\n\t\t\tpout.x = pt.x\n\t\t\tpout.y = pt.y\n\t\t\tpout.z = pt.z\n\t\t\treturn pout\n\t\t}\n\t\tconvPos4ToVector(pt: Vec4): fsync.Vector4 {\n\t\t\tlet pos = new fsync.Vector4()\n\t\t\tpos.x = pt.x\n\t\t\tpos.y = pt.y\n\t\t\tpos.z = pt.z\n\t\t\tpos.w = pt.w\n\t\t\treturn pos\n\t\t}\n\t\tconvQuatToVector(pt: Quat): fsync.Vector4 {\n\t\t\tlet pos = new fsync.Vector4()\n\t\t\tpos.x = pt.x\n\t\t\tpos.y = pt.y\n\t\t\tpos.z = pt.z\n\t\t\tpos.w = pt.w\n\t\t\treturn pos\n\t\t}\n\n\t\t// 缓动跟随旋转\n\t\tswiftlyFollowRotateStep(entityManager: fsync.EntityManager, entity: fsync.Entity, targetRotation: fsync.Vector4, swiftParams: fsync.math.BezierParams2, dt: number) {\n\t\t\tlet rotate = entityManager.getComponent(entity, fsync.Rotation)\n\t\t\tif (false) {\n\t\t\t\t// fsync.Vector.merge(rotate.value, heroRotate)\n\t\t\t} else {\n\t\t\t\tconst cameraRotate = rotate.value.clone()\n\t\t\t\tlet heroRotateEuler = new fsync.Vector3()\n\t\t\t\tfsync.Vector.transQuaternionToEuler(heroRotateEuler, targetRotation)\n\t\t\t\tlet cameraRotateEuler = new fsync.Vector3()\n\t\t\t\tfsync.Vector.transQuaternionToEuler(cameraRotateEuler, cameraRotate)\n\t\t\t\tlet dthEuler = heroRotateEuler.clone()\n\t\t\t\tfsync.Vector.subDown(dthEuler, cameraRotateEuler)\n\n\t\t\t\t// let dthEulerStep = new fsync.Vector3()\n\t\t\t\tlet newCameraRotate = cameraRotateEuler.clone()\n\n\t\t\t\tfor (let i = 0; i < dthEuler.getBinData().length; i++) {\n\t\t\t\t\tlet dthEulerN = dthEuler.getBinData()[i]\n\t\t\t\t\tdthEulerN = math.calcMinAngle(dthEulerN)\n\t\t\t\t\tlet dthEulerStepN = math.bezier2(swiftParams.C1, swiftParams.C2, swiftParams.C3, Math.abs(dthEulerN) / 180)\n\t\t\t\t\tdthEulerStepN = dthEulerStepN * swiftParams.speed * dt / 1000\n\t\t\t\t\tdthEulerStepN = Math.abs(math.minByAbs(dthEulerStepN, dthEulerN)) * math.getSign(dthEulerN)\n\t\t\t\t\tlet newCameraRotateN = newCameraRotate.getBinData()[i]\n\t\t\t\t\tnewCameraRotateN += dthEulerStepN\n\t\t\t\t\tnewCameraRotateN = math.calcMinAngle(newCameraRotateN)\n\t\t\t\t\tnewCameraRotate.getBinData()[i] = newCameraRotateN\n\t\t\t\t}\n\n\t\t\t\tfsync.Vector.transEulerToQuaternion(rotate.value, newCameraRotate)\n\t\t\t}\n\t\t}\n\n\t\tconvertToWorldSpaceAR<T extends (cc.Vec2 | cc.Vec3)>(node: cc.Node, pos: T): T {\n\t\t\tlet worldPos: T\n\t\t\tif (node[\"convertToWorldSpaceAR\"]) {\n\t\t\t\tworldPos = node[\"convertToWorldSpaceAR\"](pos)\n\t\t\t} else {\n\t\t\t\tlet p: cc.Vec3 = pos as any\n\t\t\t\tif (pos instanceof cc.Vec2) {\n\t\t\t\t\tp = new cc.Vec3(pos.x, pos.y, 0)\n\t\t\t\t}\n\t\t\t\tworldPos = node.getComponent(cc.UITransform).convertToWorldSpaceAR(p)\n\t\t\t}\n\t\t\treturn worldPos\n\t\t}\n\n\t\tgetUITransform(node: cc.Node): cc.UITransform {\n\t\t\tif (node[\"convertToWorldSpaceAR\"]) {\n\t\t\t\treturn node as any\n\t\t\t} else {\n\t\t\t\treturn node.getComponent(cc.UITransformComponent)\n\t\t\t}\n\t\t}\n\n\t\tsetScale(node: cc.Node, scale: number) {\n\t\t\tif (typeof (node.scale) == \"number\") {\n\t\t\t\tnode.scale = scale\n\t\t\t\t//@ts-expect-error\n\t\t\t} else if (node.scale instanceof cc.Vec3) {\n\t\t\t\t//@ts-expect-error\n\t\t\t\tnode.scale = new cc.Vec3(scale, scale, scale)\n\t\t\t}\n\t\t}\n\n\t\tgetWinSize(): cc.Size {\n\t\t\treturn cc[\"winSize\"]\n\t\t}\n\n\t}\n\n\texport const transformTool = new TransformTool().init()\n}\n","\nnamespace gcc.uit {\n\tconst { ccclass, property } = cc._decorator;\n\n\timport transformTool = transform.transformTool\n\n\t// @ccclass(\"CCGamepad\")\n\texport class CCGameStick {\n\n\t\t/**\n\t\t * 整体节点\n\t\t */\n\t\t@property({ type: cc.Node, displayName: \"整体节点\" })\n\t\tpublic get viewNode(): cc.Node {\n\t\t\treturn this.data.viewNode;\n\t\t}\n\t\tpublic set viewNode(value: cc.Node) {\n\t\t\tthis.data.viewNode = value;\n\t\t}\n\n\t\t/**\n\t\t * 触摸区域\n\t\t */\n\t\t@property({ type: cc.Node, displayName: \"触控范围\", })\n\t\tpublic get stickRange(): cc.Node {\n\t\t\treturn this.data.stickRange;\n\t\t}\n\t\tpublic set stickRange(value: cc.Node) {\n\t\t\tthis.data.stickRange = value;\n\t\t}\n\n\t\t/**\n\t\t * 摇杆中心视图\n\t\t */\n\t\t@property({ type: cc.Node, displayName: \"滑动区域\", tooltip: \"控制摇杆触点的滑动区域\", })\n\t\tpublic get stickCenter(): cc.Node {\n\t\t\treturn this.data.stickCenter;\n\t\t}\n\t\tpublic set stickCenter(value: cc.Node) {\n\t\t\tthis.data.stickCenter = value;\n\t\t}\n\n\t\t/**\n\t\t * 摇杆触摸点视图\n\t\t */\n\t\t@property({ type: cc.Node, displayName: \"触点\" })\n\t\tpublic get stickTouchPoint(): cc.Node {\n\t\t\treturn this.data.stickTouchPoint;\n\t\t}\n\t\tpublic set stickTouchPoint(value: cc.Node) {\n\t\t\tthis.data.stickTouchPoint = value;\n\t\t}\n\n\t\tprotected data: CCGameStick\n\t\tloadFromJson(data: CCGameStick) {\n\t\t\tthis.data = data\n\t\t}\n\n\t\tstick: kitten.gamepad.CircleStick = null\n\t\tsyncViewData(stick: kitten.gamepad.CircleStick) {\n\t\t\tthis.stick = stick\n\n\t\t\tlet stickView = this\n\n\t\t\t// 设置触摸范围\n\t\t\t{\n\t\t\t\tlet stickRangeTransform = transformTool.getUITransform(stickView.stickRange)\n\t\t\t\tlet worldPos: cc.Vec3 = stickRangeTransform.convertToWorldSpaceAR(new cc.Vec3())\n\t\t\t\tlet vec = transformTool.convPos3ToVector(worldPos)\n\t\t\t\tlet rect = new fsync.BLRect()\n\t\t\t\trect.width = stickRangeTransform.width\n\t\t\t\trect.height = stickRangeTransform.height\n\t\t\t\trect.x = vec.x - rect.width / 2\n\t\t\t\trect.y = vec.y - rect.height / 2\n\t\t\t\tstick.setTouchRange(rect)\n\t\t\t}\n\t\t\t// 设置触摸中心点\n\t\t\t{\n\t\t\t\tlet stickCenterTransform = transformTool.getUITransform(stickView.stickCenter)\n\t\t\t\tlet vec = transformTool.convPos3ToVector(stickCenterTransform.convertToWorldSpaceAR(new cc.Vec3()))\n\t\t\t\tstick.setStartPosOrigin(vec)\n\t\t\t\tlet r = (stickCenterTransform.width + stickCenterTransform.height) / 2\n\t\t\t\tstick.setCircleRadius(r / 2)\n\t\t\t\tstick.resetTouchPoint()\n\t\t\t}\n\t\t}\n\n\t\tupdateMainView() {\n\t\t\tlet stick = this.stick\n\t\t\tlet stickView = this\n\t\t\tif (stickView.stickCenter) {\n\t\t\t\t// 更新摇杆中心点视图位置\n\t\t\t\tlet ctrlCenter = stick.getCtrlCenterPos()\n\t\t\t\tlet pos = transformTool.getUITransform(stickView.stickCenter.parent).convertToNodeSpaceAR(transform.transformTool.convVectorToPos3(ctrlCenter))\n\t\t\t\tstickView.stickCenter.position = pos\n\t\t\t}\n\t\t\tif (stickView.stickTouchPoint) {\n\t\t\t\t// 更新摇杆触摸点视图位置\n\t\t\t\tlet ctrlCenter = stick.getCtrlCenterPos()\n\t\t\t\tlet touchPoint = stick.ctrlStatus.touchPoint\n\n\t\t\t\tlet offset = fsync.Vector.subDown(touchPoint.clone(), ctrlCenter)\n\t\t\t\tif (fsync.Vector.len(offset) > stick.getCircleRadius()) {\n\t\t\t\t\tfsync.Vector.multUpVar(fsync.Vector.normalizeSelf(offset), stick.getCircleRadius())\n\t\t\t\t\tlet pos = fsync.Vector.addUp(offset, ctrlCenter)\n\t\t\t\t\tlet ccpos = transformTool.getUITransform(stickView.stickTouchPoint.parent).convertToNodeSpaceAR(transform.transformTool.convVectorToPos3(pos))\n\t\t\t\t\tstickView.stickTouchPoint.position = ccpos\n\t\t\t\t} else {\n\t\t\t\t\tlet ccpos = transformTool.getUITransform(stickView.stickTouchPoint.parent).convertToNodeSpaceAR(transform.transformTool.convVectorToPos3(touchPoint))\n\t\t\t\t\tstickView.stickTouchPoint.position = ccpos\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdateDetailView() {\n\t\t\tlet stick = this.stick\n\t\t\tlet stickView = this\n\t\t\t// 其他更新\n\t\t\tif (stickView.stickTouchPoint) {\n\t\t\t\tif (stick.ctrlStatus.pressed) {\n\t\t\t\t\ttransformTool.setScale(stickView.stickTouchPoint, 1.22)\n\t\t\t\t} else {\n\t\t\t\t\ttransformTool.setScale(stickView.stickTouchPoint, 1)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tupdateView() {\n\t\t\tlet stick = this.stick\n\t\t\tif (stick == null) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tthis.updateMainView()\n\t\t\tthis.updateDetailView()\n\t\t}\n\n\t}\n}\n","\nnamespace gcc.uit {\n    const { ccclass, property } = cc._decorator;\n\n    const Vector = fsync.Vector\n\n    // @ccclass(\"CCGamepad\")\n    export class CCGamepad {\n\n        @property({ type: CCGameStick, displayName: \"左侧摇杆\", })\n        public get leftStick(): CCGameStick {\n            return this.data.leftStick;\n        }\n        public set leftStick(value: CCGameStick) {\n            this.data.leftStick = value;\n        }\n\n        @property({ type: CCGameStick, displayName: \"右侧摇杆\", })\n        public get rightStick(): CCGameStick {\n            return this.data.rightStick;\n        }\n        public set rightStick(value: CCGameStick) {\n            this.data.rightStick = value;\n        }\n\n        @property({ type: [CCGameStick], displayName: \"其他摇杆列表\", })\n        get skillSticks(): CCGameStick[] {\n            return this.data.skillSticks\n        }\n\n        @property({ type: Boolean, displayName: \"是否显示调试视图\", })\n        public get toDrawDebugView(): boolean {\n            return this.data.toDrawDebugView;\n        }\n        public set toDrawDebugView(value: boolean) {\n            this.data.toDrawDebugView = value;\n        }\n\n        protected data: CCGamepad\n        loadFromJson(data: CCGamepad) {\n            this.data = data\n        }\n\n        gamepad: kitten.gamepad.NormalGamepad\n\n        onLoad() {\n            this.gamepad = new kitten.gamepad.NormalGamepad().init()\n\n            if (this.leftStick) {\n                this.leftStick.syncViewData(this.gamepad.leftStick)\n            }\n            if (this.rightStick) {\n                this.rightStick.syncViewData(this.gamepad.rightStick)\n            }\n            for (let stickView of this.skillSticks) {\n                let stick = new kitten.gamepad.GameStick().init(`skill_${stickView.stickRange.parent.getSiblingIndex()}`, this.gamepad.sharedState)\n                this.gamepad.virutalCtrls.push(stick)\n                stickView.syncViewData(stick)\n            }\n            if (this.toDrawDebugView) {\n                this.gamepad.setupSimpleView()\n            }\n\n            this.updateView()\n        }\n\n        start() {\n\n        }\n\n        protected getSkillStickViews() {\n            let skillStickViews = []\n            if (this.leftStick) {\n                skillStickViews.push(this.leftStick)\n            }\n            if (this.rightStick) {\n                skillStickViews.push(this.rightStick)\n            }\n            skillStickViews.push(...this.skillSticks)\n            return skillStickViews\n        }\n\n        updateViewVisible() {\n            let skillStickViews = this.getSkillStickViews()\n            let sticks = this.gamepad.virutalCtrls\n            skillStickViews.forEach((view, index) => {\n                let stick = sticks[index]\n                view.viewNode.active = stick.enable\n            })\n        }\n\n        updateView() {\n            this.updateViewVisible()\n\n            let skillStickViews = this.getSkillStickViews()\n            let sticks = this.gamepad.virutalCtrls\n            skillStickViews.forEach((stickView, index) => {\n                let stick = sticks[index]\n                stickView.stick = stick\n                stickView.updateView()\n            })\n        }\n\n        update() {\n            this.updateView()\n        }\n\n        setSkillEnabled(index: number, b: boolean) {\n            this.gamepad.virutalCtrls[index].enable = b\n        }\n\n    }\n}\n","\nnamespace gcc.uit {\n\n\timport transformTool=transform.transformTool\n\n\t/**\n\t * 鼠标滚轮数据\n\t */\n\texport class ScrollData {\n\t\tcurScroll: fsync.Vector3 = new fsync.Vector3()\n\t\tdeltaScroll: fsync.Vector3 = new fsync.Vector3()\n\n\t\tupdate() {\n\t\t\tfsync.Vector.addUp(this.curScroll, this.deltaScroll)\n\t\t\tfsync.Vector.resetValues(this.deltaScroll)\n\t\t}\n\t}\n\n\t/**\n\t * cocos触摸事件板\n\t */\n\texport class CocosTouchPad {\n\n\t\tguesture: kitten.guesture.GuestureAnalyzer\n\t\tscrollData: ScrollData\n\n\t\tprotected listenEvents: { [key: string]: Function }\n\t\tinit() {\n\t\t\tthis.guesture = new kitten.guesture.GuestureAnalyzer().init()\n\t\t\tthis.scrollData = new ScrollData()\n\t\t\tthis.listenEvents = fsync.EmptyTable()\n\n\t\t\tthis.initEvents()\n\n\t\t\treturn this\n\t\t}\n\n\t\tprotected initEvents() {\n\t\t\tconst touchedPointMap: { [key: string]: boolean } = {}\n\n\t\t\tthis.listenEvents[cc.Node.EventType.TOUCH_START] = (event: cc.Event.EventTouch) => {\n\t\t\t\t// console.log(\"touchstart\", event)\n\t\t\t\tlet touches = event.getTouches()\n\t\t\t\tlet vecs: fsync.Vector3[] = []\n\t\t\t\ttouches.forEach((touch) => {\n\t\t\t\t\tlet vec = this.getTouchEventPos(touch)\n\t\t\t\t\tvecs[touch.getID()] = vec\n\t\t\t\t\ttouchedPointMap[touch.getID()] = true\n\t\t\t\t})\n\t\t\t\tthis.testGuesture2(vecs)\n\t\t\t\tthis.guesture.inputTouchPoints(true, vecs)\n\t\t\t}\n\n\t\t\tconst onTouchOver = (event: cc.Event.EventTouch, key: string) => {\n\t\t\t\t// console.log(\"touchend\", event)\n\t\t\t\tlet touches = event.getTouches()\n\t\t\t\tlet vecs: fsync.Vector3[] = []\n\t\t\t\ttouches.forEach((touch) => {\n\t\t\t\t\tlet vec = this.getTouchEventPos(touch)\n\t\t\t\t\tvecs[touch.getID()] = vec\n\t\t\t\t\ttouchedPointMap[touch.getID()] = false\n\t\t\t\t})\n\t\t\t\tthis.testGuesture2(vecs)\n\t\t\t\tthis.guesture.inputTouchPoints(false, vecs)\n\t\t\t}\n\t\t\tconst onTouchEnd = (event: cc.Event.EventTouch) => {\n\t\t\t\tonTouchOver(event, \"TOUCH_END\")\n\t\t\t}\n\t\t\tconst onTouchCancel = (event: cc.Event.EventTouch) => {\n\t\t\t\tonTouchOver(event, \"TOUCH_CANCEL\")\n\t\t\t}\n\t\t\tthis.listenEvents[cc.Node.EventType.TOUCH_CANCEL] = onTouchCancel\n\t\t\tthis.listenEvents[cc.Node.EventType.TOUCH_END] = onTouchEnd\n\t\t\tthis.listenEvents[cc.Node.EventType.TOUCH_MOVE] = (event: cc.Event.EventTouch) => {\n\t\t\t\t// console.log(\"touchmove\", event)\n\t\t\t\tlet touches = event.getTouches()\n\t\t\t\tlet vecs: fsync.Vector3[] = []\n\t\t\t\ttouches.forEach((touch) => {\n\t\t\t\t\t// 屏蔽掉没有经由touchstart发起的触摸点，避免缩放bug\n\t\t\t\t\tif (touchedPointMap[touch.getID()]) {\n\t\t\t\t\t\tlet vec = this.getTouchEventPos(touch)\n\t\t\t\t\t\tvecs[touch.getID()] = vec\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.testGuesture2(vecs)\n\t\t\t\tthis.guesture.inputTouchPoints(true, vecs)\n\t\t\t}\n\t\t\tthis.listenEvents[cc.Node.EventType.MOUSE_WHEEL] = (event: cc.Event.EventMouse) => {\n\t\t\t\tconsole.log(\"mouse wheel\", event)\n\t\t\t\tthis.scrollData.deltaScroll.x += event.getScrollX()\n\t\t\t\tthis.scrollData.deltaScroll.y += event.getScrollY()\n\t\t\t}\n\n\t\t}\n\n\t\t/**\n\t\t * 获取触摸事件坐标\n\t\t * @param touch \n\t\t */\n\t\tprotected getTouchEventPos(touch: cc.Touch): fsync.Vector3 {\n\t\t\tlet designSize = transformTool.getWinSize()\n\t\t\tlet pt = touch.getLocation()\n\t\t\tlet vec = new fsync.Vector3()\n\t\t\t// 转化屏幕中心点为坐标原点\n\t\t\tvec.x = pt.x - designSize.width / 2\n\t\t\tvec.y = pt.y - designSize.height / 2\n\t\t\treturn vec\n\t\t}\n\t\t// 仅测试\n\t\tprivate testGuesture2(vecs: fsync.Vector3[]) {\n\t\t\t// vecs.push(new fsync.Vector3())\n\t\t}\n\n\t\t/**\n\t\t * 接触侦听触摸事件\n\t\t */\n\t\tunregisterTouchPad() {\n\t\t\tthis.listenInfo.forEach(info => {\n\t\t\t\tlet { node, useCapture } = info\n\t\t\t\tfor (let key in this.listenEvents) {\n\t\t\t\t\tnode.off(key, this.listenEvents[key], useCapture)\n\t\t\t\t}\n\t\t\t})\n\t\t\tthis.listenInfo.length = 0\n\t\t}\n\n\t\tprotected listenInfo: { node: cc.Node, useCapture: boolean }[] = []\n\n\t\t/**\n\t\t * 注册触摸板事件\n\t\t * @param touchPad\n\t\t * @param useCapture 将触摸或鼠标事件注册在捕获阶段\n\t\t */\n\t\tregisterTouchPad(touchPad: cc.Node, useCapture: boolean = false) {\n\t\t\t// const touchedPointMap: { [key: string]: boolean } = {}\n\n\t\t\t// touchPad.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\n\t\t\t// \t// console.log(\"touchstart\", event)\n\t\t\t// \tlet touches = event.getTouches()\n\t\t\t// \tlet vecs: fsync.Vector3[] = []\n\t\t\t// \ttouches.forEach((touch) => {\n\t\t\t// \t\tlet vec = this.getTouchEventPos(touch)\n\t\t\t// \t\tvecs[touch.getID()] = vec\n\t\t\t// \t\ttouchedPointMap[touch.getID()] = true\n\t\t\t// \t})\n\t\t\t// \tthis.testGuesture2(vecs)\n\t\t\t// \tthis.guesture.inputTouchPoints(true, vecs)\n\t\t\t// }, this, useCapture)\n\t\t\t// const onTouchOver = (event: cc.Event.EventTouch, key: string) => {\n\t\t\t// \t// console.log(\"touchend\", event)\n\t\t\t// \tlet touches = event.getTouches()\n\t\t\t// \tlet vecs: fsync.Vector3[] = []\n\t\t\t// \ttouches.forEach((touch) => {\n\t\t\t// \t\tlet vec = this.getTouchEventPos(touch)\n\t\t\t// \t\tvecs[touch.getID()] = vec\n\t\t\t// \t\ttouchedPointMap[touch.getID()] = false\n\t\t\t// \t})\n\t\t\t// \tthis.testGuesture2(vecs)\n\t\t\t// \tthis.guesture.inputTouchPoints(false, vecs)\n\t\t\t// }\n\t\t\t// const onTouchEnd = (event: cc.Event.EventTouch) => {\n\t\t\t// \tonTouchOver(event, \"TOUCH_END\")\n\t\t\t// }\n\t\t\t// const onTouchCancel = (event: cc.Event.EventTouch) => {\n\t\t\t// \tonTouchOver(event, \"TOUCH_CANCEL\")\n\t\t\t// }\n\t\t\t// touchPad.on(cc.Node.EventType.TOUCH_CANCEL, onTouchCancel, this, useCapture)\n\t\t\t// touchPad.on(cc.Node.EventType.TOUCH_END, onTouchEnd, this, useCapture)\n\t\t\t// touchPad.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\n\t\t\t// \t// console.log(\"touchmove\", event)\n\t\t\t// \tlet touches = event.getTouches()\n\t\t\t// \tlet vecs: fsync.Vector3[] = []\n\t\t\t// \ttouches.forEach((touch) => {\n\t\t\t// \t\t// 屏蔽掉没有经由touchstart发起的触摸点，避免缩放bug\n\t\t\t// \t\tif (touchedPointMap[touch.getID()]) {\n\t\t\t// \t\t\tlet vec = this.getTouchEventPos(touch)\n\t\t\t// \t\t\tvecs[touch.getID()] = vec\n\t\t\t// \t\t}\n\t\t\t// \t})\n\t\t\t// \tthis.testGuesture2(vecs)\n\t\t\t// \tthis.guesture.inputTouchPoints(true, vecs)\n\t\t\t// }, this, useCapture)\n\t\t\t// touchPad.on(cc.Node.EventType.MOUSE_WHEEL, (event: cc.Event.EventMouse) => {\n\t\t\t// \tconsole.log(\"mouse wheel\", event)\n\t\t\t// \tthis.scrollData.deltaScroll.x += event.getScrollX()\n\t\t\t// \tthis.scrollData.deltaScroll.y += event.getScrollY()\n\t\t\t// })\n\n\t\t\tfor (let key in this.listenEvents) {\n\t\t\t\ttouchPad.on(key, this.listenEvents[key], useCapture)\n\t\t\t}\n\n\t\t\tthis.listenInfo.push({ node: touchPad, useCapture })\n\t\t}\n\n\t}\n}\n"]}